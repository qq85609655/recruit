/**
 * Please modify this class to meet your needs This class is not complete
 */

package com.csot.gm.esbws.emp;

import java.util.List;
import java.util.logging.Logger;

import javax.annotation.Resource;
import com.csot.gm.esbws.service.EmpBasicService;

/**
 * This class was generated by Apache CXF 2.5.2 2016-10-14T17:01:17.871+08:00 Generated source
 * version: 2.5.2
 * 
 */

@javax.jws.WebService(
    serviceName = "ESB_ESB_ESB_ImportEmpBasicInfoRouteSrv.serviceagent",
    portName = "ESB_ESB_ESB_ImportEmpBasicInfoRouteSrv",
    targetNamespace = "http://www.csot.tcl.com/ESB_ESB_ESB_ImportEmpBasicInfoRouteSrv/1.0",
    wsdlLocation = "file:/D:/Study/SSO4A数据_规范及WSDL文件20160704/ESB_ESB_ESB_ImportEmpBasicInfoRouteSrv/ESB_ESB_ESB_ImportEmpBasicInfoRouteSrv.wsdl",
    endpointInterface = "com.csot.gm.esbws.emp.ESBESBESBImportEmpBasicInfoRouteSrv")
public class ESBESBESBImportEmpBasicInfoRouteSrvImpl implements ESBESBESBImportEmpBasicInfoRouteSrv {

  private static final Logger LOG = Logger.getLogger(ESBESBESBImportEmpBasicInfoRouteSrvImpl.class
      .getName());

  @Resource(name = "empBasicService")
  private EmpBasicService empBasicService;

  /*
   * (non-Javadoc)
   * 
   * @see com.csot.gm.esbws.emp.ESBESBESBImportEmpBasicInfoRouteSrv#process(com.csot.gm.esbws.emp.
   * ESBESBESBImportEmpBasicInfoRouteSrvRequest payload )*
   */
  @Override
  public com.csot.gm.esbws.emp.ESBESBESBImportEmpBasicInfoRouteSrvResponse process(
      ESBESBESBImportEmpBasicInfoRouteSrvRequest payload) {

    // 记录本次调用的ID，便于发生错误时检查
    String processId = Integer.toString(payload.hashCode());
    LOG.info("Executing operation process. ID: " + processId);
    try {
      ESBESBESBImportEmpBasicInfoRouteSrvResponse _return =
          new ESBESBESBImportEmpBasicInfoRouteSrvResponse();
      ResponseCollection responseCollection = new ResponseCollection();
      ErrorCollection errorCollection = new ErrorCollection();
      List<ResponseItem> responseItemList = responseCollection.getResponseItem();
      List<ErrorItem> errorItemList = errorCollection.getErrorItem();

      ESBESBESBImportEmpBasicInfoRouteSrvInputCollection inputCollection =
          payload.getESBESBESBImportEmpBasicInfoRouteSrvInputCollection();
      List<ESBESBESBImportEmpBasicInfoRouteSrvInputItem> inputItemList =
          inputCollection.getESBESBESBImportEmpBasicInfoRouteSrvInputItem();

      // 循环将账号信息写入T_GM_USER_INFO表
      for (ESBESBESBImportEmpBasicInfoRouteSrvInputItem inputItem : inputItemList) {
        try {
          LOG.info("begin-----");
          LOG.info(inputItem.getCNAME());
          empBasicService.updateAccountInfo(inputItem, processId, responseItemList, errorItemList);
        } catch (java.lang.Exception ex) {
          LOG.info("exceptionMsg: " + ex.getMessage());
          throw new RuntimeException(ex);
        }
      }
      String serviceFlag = "TRUE";
      StringBuilder serviceMsg =
          new StringBuilder(100).append("接收").append(inputItemList.size()).append("记录,共导入")
              .append(responseItemList.size() + errorItemList.size()).append("条记录，成功")
              .append(responseItemList.size()).append("条");
      if (!errorItemList.isEmpty()) {
        serviceFlag = "FALSE";
        serviceMsg.append(",失败").append(errorItemList.size()).append("条");
      }
      _return.setResponseCollection(responseCollection);
      _return.setErrorCollection(errorCollection);
      _return.setSERVICEFLAG(serviceFlag);
      _return.setSERVICEMESSAGE(serviceMsg.toString());

      LOG.info("Complete operation process. ID: " + processId);
      return _return;
    } catch (java.lang.Exception ex) {
      LOG.info("exceptionMsg: " + ex.getMessage());
      throw new RuntimeException(ex);
    }
  }

}
