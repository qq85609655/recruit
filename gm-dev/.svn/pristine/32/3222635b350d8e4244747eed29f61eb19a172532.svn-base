<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.csot.gm.materialManage.dao.extension.partNo.PartNoExtMapper">

  <resultMap id="PartNoMap" type="com.csot.gm.materialManage.model.extension.partNo.PartNoExt">
    <id column="ID" property="id" jdbcType="VARCHAR"/>
    <result column="PART_NO" property="partNo" jdbcType="VARCHAR"/>
    <result column="PART_NAME" property="partName" jdbcType="VARCHAR"/>
    <result column="CN_DESC" property="cnDesc" jdbcType="VARCHAR"/>
    <result column="EN_DESC" property="enDesc" jdbcType="VARCHAR"/>
    <result column="CREATE_CODE" property="createCode" jdbcType="VARCHAR"/>
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP"/>
    <result column="PART_NO_STATUS" property="partNoStatus" jdbcType="VARCHAR"/>
    <result column="PART_ID" property="partId" jdbcType="VARCHAR"/>
    <result column="HASH_CODE" property="hashCode" jdbcType="VARCHAR"/>
    <result column="PART_NO_UID" property="partNoUid" jdbcType="VARCHAR"/>
    <result column="CREATE_NAME" property="createName" jdbcType="VARCHAR"/>
    <result column="PLANT" property="plant" jdbcType="VARCHAR"/>
    <result column="DEPARTMENT" property="department" jdbcType="VARCHAR"/>
    <result column="TELEPHONE" property="telephone" jdbcType="VARCHAR"/>
    <result column="PART_TYPE" property="partType" jdbcType="VARCHAR"/>
  </resultMap>

  <resultMap id="ExportSearchMap" type="com.csot.gm.util.SpareExcelVbo">
    <result column="PART_NO" property="partNo" jdbcType="VARCHAR"/>
    <result column="PART_NAME" property="partName" jdbcType="VARCHAR"/>
    <result column="PART_LEVEL" property="partLevel" jdbcType="VARCHAR"/>
    <result column="DEPARTMENT" property="department" jdbcType="VARCHAR"/>
    <result column="CREATE_CODE" property="createCode" jdbcType="VARCHAR"/>
    <result column="CREATE_NAME" property="createName" jdbcType="VARCHAR"/>
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP"/>
    <result column="DEVICE_CLASS" property="deviceClass" jdbcType="VARCHAR"/>
    <result column="DEVICE_PLANT" property="devicePlant" jdbcType="VARCHAR"/>
    <result column="BRAND" property="brand" jdbcType="VARCHAR"/>
    <result column="SPEC" property="spec" jdbcType="VARCHAR"/>
  </resultMap>

  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" suffix=")" prefixOverrides="and">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition}
                  #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition}
                  #{criterion.value} and
                  #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")"
                           separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>

  <select id="selectPartNoListByPartId" parameterType="map" resultMap="PartNoMap">
    select
    gpn.id,
    gpn.part_no, gpn.part_name, gpn.cn_desc, gpn.en_desc, gpn.create_code, gpn.create_time,
    gpn.part_no_status, gpn.part_id, gpn.hash_code,
    gpn.part_no_uid, gpn.create_name, gpn.plant,
    gpn.department, gpn.telephone, gpn.part_type from t_gm_part_no gpn
    where gpn.part_id = #{partId}
  </select>

  <select id="selectPartNoListByHashCodeAndPartId" parameterType="map" resultMap="PartNoMap">
    select
    gpn.id, gpn.part_no, gpn.part_name, gpn.cn_desc, gpn.en_desc, gpn.create_code,
    gpn.create_time,
    gpn.part_no_status, gpn.part_id, gpn.hash_code,
    gpn.part_no_uid, gpn.create_name, gpn.plant,
    gpn.department, gpn.telephone, gpn.part_type from t_gm_part_no gpn
    where gpn.hash_code =
    #{hashCode} and gpn.part_id = #{partId}
  </select>

  <select id="selectPartNoListByPartNo" parameterType="map" resultMap="PartNoMap">
    select
    gpn.id,
    gpn.part_no, gpn.part_name, gpn.cn_desc, gpn.en_desc, gpn.create_code, gpn.create_time,
    gpn.part_no_status, gpn.part_id, gpn.hash_code,
    gpn.part_no_uid, gpn.create_name, gpn.plant,
    gpn.department, gpn.telephone, gpn.part_type from t_gm_part_no gpn
    where gpn.part_no = #{partNo}
  </select>

  <select id="selectPartNoListByUid" parameterType="map" resultMap="PartNoMap" useCache="false">
    select gpn.id, gpn.part_no, gpn.part_name, gpn.cn_desc, gpn.en_desc, gpn.create_code,
    gpn.create_time, gpn.part_no_status, gpn.part_id, gpn.hash_code,
    gpn.part_no_uid,
    gpn.create_name, gpn.plant, gpn.department, gpn.telephone, gpn.part_type from t_gm_part_no gpn
    where gpn.part_no_uid = #{uid}
  </select>

  <select id="selectPartNoListByStatus" parameterType="map" resultMap="PartNoMap">
    select
    gpn.id,
    gpn.part_no, gpn.part_name, gpn.cn_desc, gpn.en_desc, gpn.create_code, gpn.create_time,
    gpn.part_no_status, gpn.part_id, gpn.hash_code,
    gpn.part_no_uid, gpn.create_name, gpn.plant,
    gpn.department, gpn.telephone, gpn.part_type from t_gm_part_no gpn
    where gpn.part_no_status =
    #{status}
  </select>

  <select id="selectAllPartNo" parameterType="map" resultMap="PartNoMap">
    select gpn.id,
    gpn.part_no,
    gpn.part_name, gpn.cn_desc, gpn.en_desc, gpn.create_code, gpn.create_time,
    gpn.part_no_status,
    gpn.part_id, gpn.hash_code,
    gpn.part_no_uid, gpn.create_name, gpn.plant, gpn.department,
    gpn.telephone, gpn.part_type from t_gm_part_no gpn
    order by gpn.create_time desc
  </select>

  <select id="selectNotBomMaterailPartIds" parameterType="map" resultType="java.lang.String">
    SELECT part_id FROM
    T_GM_TYPE_PART_MAPPING WHERE PART_TYPE_ID in
    <foreach collection="partTypeIdList" item="partTypeId" open="(" close=")" separator=",">
      #{partTypeId}
    </foreach>
  </select>

  <select id="getExportSearch" parameterType="map" statementType="CALLABLE">
  {call test_some(
		#{part_ids, jdbcType=VARCHAR, mode=IN},
		#{p_result, mode=OUT,jdbcType=CURSOR, resultMap=ExportSearchMap})}
  </select>

  <select id="selectExportByPartIdList" parameterType="map" resultMap="ExportSearchMap">
    select part_no,
    part_name,
    part_level,
    DEPARTMENT,
    CREATE_NAME,
    CREATE_CODE,
    create_time,
    max(deviceClass) device_class,
    max(devicePlant) device_plant,
    max(brand) brand,
    max(spec) spec
    from (select t.DEPARTMENT,
    t.CREATE_NAME,
    t.CREATE_CODE,
    t.create_time,
    t.part_no,
    t.part_name,
    t2.part_desc || '[' || t2.part_prefix_code || ']' part_level,
    decode(t1.property_name,
    'deviceClass',
    t1.property_value,
    null) deviceClass,
    decode(t1.property_name,
    'devicePlant',
    t1.property_value,
    null) devicePlant,
    decode(t1.property_name, 'brand', t1.property_value, null) brand,
    decode(t1.property_name, 'spec', t1.property_value, null) spec
    from t_gm_property_value t1, t_gm_part_no t, t_gm_part t2
    where t.part_id in
    <foreach collection="partIdList" item="partId" open="(" close=")" separator=",">
      #{partId}
    </foreach>
    and t1.part_no_id = t.id
    and t2.id = t.part_id
    and (t1.property_name = 'deviceClass' or
    t1.property_name = 'devicePlant' or
    t1.property_name = 'brand' or t1.property_name = 'spec'))
    group by part_no,
    part_name,
    part_level,
    DEPARTMENT,
    CREATE_NAME,
    CREATE_CODE,
    create_time
  </select>

  <select id="selectExportByPartNoIdList" parameterType="map" resultMap="ExportSearchMap">
    select part_no,
    part_name,
    part_level,
    DEPARTMENT,
    CREATE_NAME,
    CREATE_CODE,
    create_time,
    max(deviceClass) device_class,
    max(devicePlant) device_plant,
    max(brand) brand,
    max(spec) spec
    from (select t.DEPARTMENT,
    t.CREATE_NAME,
    t.CREATE_CODE,
    t.create_time,
    t.part_no,
    t.part_name,
    t2.part_desc || '[' || t2.part_prefix_code || ']' part_level,
    decode(t1.property_name,
    'deviceClass',
    t1.property_value,
    null) deviceClass,
    decode(t1.property_name,
    'devicePlant',
    t1.property_value,
    null) devicePlant,
    decode(t1.property_name, 'brand', t1.property_value, null) brand,
    decode(t1.property_name, 'spec', t1.property_value, null) spec
    from t_gm_property_value t1, t_gm_part_no t, t_gm_part t2
    where
    <foreach collection="partNoIdList" item="partNoId" index="index"  open="(" separator="or" close=")">
      t.id = #{partNoId}
    </foreach>
    and t1.part_no_id = t.id
    and t2.id = t.part_id
    and (t1.property_name = 'deviceClass' or
    t1.property_name = 'devicePlant' or
    t1.property_name = 'brand' or t1.property_name = 'spec'))
    group by part_no,
    part_name,
    part_level,
    DEPARTMENT,
    CREATE_NAME,
    CREATE_CODE,
    create_time
  </select>

  <select id="countByExample"
          parameterType="com.csot.gm.materialManage.model.extension.partNo.PartNoExtCriteria"
          resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from T_GM_PART_NO
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
  </select>
  <sql id="Oracle_Dialect_Pagination_Prefix">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <if test="page != null">
      select * from ( select row_.*, rownum rownum_ from (
    </if>
  </sql>
  <sql id="Oracle_Dialect_Pagination_Suffix">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <if test="page != null">
      <![CDATA[ ) row_ ) where rownum_ > #{page.begin} and rownum_ <= #{page.end} ]]>
    </if>
  </sql>
</mapper>
