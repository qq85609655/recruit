<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.csot.gm.materialManage.dao.extension.properties.PartPropertiesExtMapper" >
  
  <resultMap id="PropertyResultMap" type="com.csot.gm.materialManage.model.extension.properties.PartPropertiesExt" >
  <result column="ID" property="id" jdbcType="VARCHAR" />
  <result column="PROPERTY_NAME" property="propertyName" jdbcType="VARCHAR" />
  <result column="PROPERTY_DIS_NAME" property="propertyDisName" jdbcType="VARCHAR" />
  <result column="PROPERTY_UNIT" property="propertyUnit" jdbcType="VARCHAR" />
  <result column="IS_UNIQUE" property="isUnique" jdbcType="VARCHAR" />
  <result column="IS_ENUM" property="isEnum" jdbcType="VARCHAR" />
  </resultMap>
  
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  <select id="getPropertiesByPartId" parameterType="map" resultMap="PropertyResultMap" >
    select gp.id, gp.property_name, gp.property_dis_name, gp.property_unit, gp.is_unique, gp.is_enum from t_gm_properties gp where gp.part_id = #{partId}
  </select>
  <select id="getEnumPropertiesByPartId" parameterType="map" resultMap="PropertyResultMap" >
    select gp.id, gp.property_name, gp.property_dis_name, gp.property_unit, gp.is_unique, gp.is_enum from t_gm_properties gp where gp.part_id = #{partId} and gp.is_enum = #{isEnum}
  </select>
  <select id="getPropertyByPartIdAndProName" parameterType="map" resultMap="PropertyResultMap" >
    select gp.id, gp.property_name, gp.property_dis_name, gp.property_unit, gp.is_unique, gp.is_enum from t_gm_properties gp where gp.part_id = #{partId} and gp.property_name = #{proName}
  </select>
  <select id="getPropertiesByPartIdAndUnique" parameterType="map" resultMap="PropertyResultMap" >
    select gp.id, gp.property_name, gp.property_dis_name, gp.property_unit, gp.is_unique, gp.is_enum from t_gm_properties gp where gp.part_id = #{partId} and gp.is_unique = #{isUnique}
  </select>
  <!-- 通过partId与property_name 查询id -->
  <select id="getIdByPartIdAndProDisName" parameterType="map" resultMap="PropertyResultMap">
    select gp.id, gp.property_name, gp.property_dis_name, gp.property_unit, gp.is_unique, gp.is_enum from t_gm_properties gp where gp.part_id = #{partId} and gp.property_dis_name = #{propertyDisName}
  </select>
  <select id="countByExample" parameterType="com.csot.gm.materialManage.model.extension.properties.PartPropertiesExtCriteria" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from T_GM_PROPERTIES
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <sql id="Oracle_Dialect_Pagination_Prefix" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <if test="page != null" >
      select * from ( select row_.*, rownum rownum_ from ( 
    </if>
  </sql>
  <sql id="Oracle_Dialect_Pagination_Suffix" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <if test="page != null" >
      <![CDATA[ ) row_ ) where rownum_ > #{page.begin} and rownum_ <= #{page.end} ]]>
    </if>
  </sql>
</mapper>