package com.csot.gm.materialManage.model.original.propertiesM;

import java.util.ArrayList;
import java.util.List;
import org.amberframework.core.mybatis.pojo.Page;

public class PropertiesMCriteria {
  /**
   * This field was generated by MyBatis Generator.
   * This field corresponds to the database table T_GM_PROPERTIES_MAPPING
   *
   * @mbggenerated
   */
  protected String orderByClause;

  /**
   * This field was generated by MyBatis Generator.
   * This field corresponds to the database table T_GM_PROPERTIES_MAPPING
   *
   * @mbggenerated
   */
  protected boolean distinct;

  /**
   * This field was generated by MyBatis Generator.
   * This field corresponds to the database table T_GM_PROPERTIES_MAPPING
   *
   * @mbggenerated
   */
  protected List<Criteria> oredCriteria;

  /**
   * This field was generated by MyBatis Generator.
   * This field corresponds to the database table T_GM_PROPERTIES_MAPPING
   *
   * @mbggenerated
   */
  protected Page page;

  /**
   * This method was generated by MyBatis Generator.
   * This method corresponds to the database table T_GM_PROPERTIES_MAPPING
   *
   * @mbggenerated
   */
  public PropertiesMCriteria() {
    oredCriteria = new ArrayList<Criteria>();
  }

  /**
   * This method was generated by MyBatis Generator.
   * This method corresponds to the database table T_GM_PROPERTIES_MAPPING
   *
   * @mbggenerated
   */
  public void setOrderByClause(String orderByClause) {
    this.orderByClause = orderByClause;
  }

  /**
   * This method was generated by MyBatis Generator.
   * This method corresponds to the database table T_GM_PROPERTIES_MAPPING
   *
   * @mbggenerated
   */
  public String getOrderByClause() {
    return orderByClause;
  }

  /**
   * This method was generated by MyBatis Generator.
   * This method corresponds to the database table T_GM_PROPERTIES_MAPPING
   *
   * @mbggenerated
   */
  public void setDistinct(boolean distinct) {
    this.distinct = distinct;
  }

  /**
   * This method was generated by MyBatis Generator.
   * This method corresponds to the database table T_GM_PROPERTIES_MAPPING
   *
   * @mbggenerated
   */
  public boolean isDistinct() {
    return distinct;
  }

  /**
   * This method was generated by MyBatis Generator.
   * This method corresponds to the database table T_GM_PROPERTIES_MAPPING
   *
   * @mbggenerated
   */
  public List<Criteria> getOredCriteria() {
    return oredCriteria;
  }

  /**
   * This method was generated by MyBatis Generator.
   * This method corresponds to the database table T_GM_PROPERTIES_MAPPING
   *
   * @mbggenerated
   */
  public void or(Criteria criteria) {
    oredCriteria.add(criteria);
  }

  /**
   * This method was generated by MyBatis Generator.
   * This method corresponds to the database table T_GM_PROPERTIES_MAPPING
   *
   * @mbggenerated
   */
  public Criteria or() {
    Criteria criteria = createCriteriaInternal();
    oredCriteria.add(criteria);
    return criteria;
  }

  /**
   * This method was generated by MyBatis Generator.
   * This method corresponds to the database table T_GM_PROPERTIES_MAPPING
   *
   * @mbggenerated
   */
  public Criteria createCriteria() {
    Criteria criteria = createCriteriaInternal();
    if (oredCriteria.size() == 0) {
      oredCriteria.add(criteria);
    }
    return criteria;
  }

  /**
   * This method was generated by MyBatis Generator.
   * This method corresponds to the database table T_GM_PROPERTIES_MAPPING
   *
   * @mbggenerated
   */
  protected Criteria createCriteriaInternal() {
    Criteria criteria = new Criteria();
    return criteria;
  }

  /**
   * This method was generated by MyBatis Generator.
   * This method corresponds to the database table T_GM_PROPERTIES_MAPPING
   *
   * @mbggenerated
   */
  public void clear() {
    oredCriteria.clear();
    orderByClause = null;
    distinct = false;
  }

  /**
   * This method was generated by MyBatis Generator.
   * This method corresponds to the database table T_GM_PROPERTIES_MAPPING
   *
   * @mbggenerated
   */
  public void setPage(Page page) {
    this.page = page;
  }

  /**
   * This method was generated by MyBatis Generator.
   * This method corresponds to the database table T_GM_PROPERTIES_MAPPING
   *
   * @mbggenerated
   */
  public Page getPage() {
    return this.page;
  }

  /**
   * This class was generated by MyBatis Generator.
   * This class corresponds to the database table T_GM_PROPERTIES_MAPPING
   *
   * @mbggenerated
   */
  protected abstract static class GeneratedCriteria {
    protected List<Criterion> criteria;

    protected GeneratedCriteria() {
      super();
      criteria = new ArrayList<Criterion>();
    }

    public boolean isValid() {
      return criteria.size() > 0;
    }

    public List<Criterion> getAllCriteria() {
      return criteria;
    }

    public List<Criterion> getCriteria() {
      return criteria;
    }

    protected void addCriterion(String condition) {
      if (condition == null) {
        throw new RuntimeException("Value for condition cannot be null");
      }
      criteria.add(new Criterion(condition));
    }

    protected void addCriterion(String condition, Object value, String property) {
      if (value == null) {
        throw new RuntimeException("Value for " + property + " cannot be null");
      }
      criteria.add(new Criterion(condition, value));
    }

    protected void addCriterion(String condition, Object value1, Object value2, String property) {
      if (value1 == null || value2 == null) {
        throw new RuntimeException("Between values for " + property + " cannot be null");
      }
      criteria.add(new Criterion(condition, value1, value2));
    }

    public Criteria andIdIsNull() {
      addCriterion("ID is null");
      return (Criteria) this;
    }

    public Criteria andIdIsNotNull() {
      addCriterion("ID is not null");
      return (Criteria) this;
    }

    public Criteria andIdEqualTo(String value) {
      addCriterion("ID =", value, "id");
      return (Criteria) this;
    }

    public Criteria andIdNotEqualTo(String value) {
      addCriterion("ID <>", value, "id");
      return (Criteria) this;
    }

    public Criteria andIdGreaterThan(String value) {
      addCriterion("ID >", value, "id");
      return (Criteria) this;
    }

    public Criteria andIdGreaterThanOrEqualTo(String value) {
      addCriterion("ID >=", value, "id");
      return (Criteria) this;
    }

    public Criteria andIdLessThan(String value) {
      addCriterion("ID <", value, "id");
      return (Criteria) this;
    }

    public Criteria andIdLessThanOrEqualTo(String value) {
      addCriterion("ID <=", value, "id");
      return (Criteria) this;
    }

    public Criteria andIdLike(String value) {
      addCriterion("ID like", value, "id");
      return (Criteria) this;
    }

    public Criteria andIdNotLike(String value) {
      addCriterion("ID not like", value, "id");
      return (Criteria) this;
    }

    public Criteria andIdIn(List<String> values) {
      addCriterion("ID in", values, "id");
      return (Criteria) this;
    }

    public Criteria andIdNotIn(List<String> values) {
      addCriterion("ID not in", values, "id");
      return (Criteria) this;
    }

    public Criteria andIdBetween(String value1, String value2) {
      addCriterion("ID between", value1, value2, "id");
      return (Criteria) this;
    }

    public Criteria andIdNotBetween(String value1, String value2) {
      addCriterion("ID not between", value1, value2, "id");
      return (Criteria) this;
    }

    public Criteria andPropertyIdIsNull() {
      addCriterion("PROPERTY_ID is null");
      return (Criteria) this;
    }

    public Criteria andPropertyIdIsNotNull() {
      addCriterion("PROPERTY_ID is not null");
      return (Criteria) this;
    }

    public Criteria andPropertyIdEqualTo(String value) {
      addCriterion("PROPERTY_ID =", value, "propertyId");
      return (Criteria) this;
    }

    public Criteria andPropertyIdNotEqualTo(String value) {
      addCriterion("PROPERTY_ID <>", value, "propertyId");
      return (Criteria) this;
    }

    public Criteria andPropertyIdGreaterThan(String value) {
      addCriterion("PROPERTY_ID >", value, "propertyId");
      return (Criteria) this;
    }

    public Criteria andPropertyIdGreaterThanOrEqualTo(String value) {
      addCriterion("PROPERTY_ID >=", value, "propertyId");
      return (Criteria) this;
    }

    public Criteria andPropertyIdLessThan(String value) {
      addCriterion("PROPERTY_ID <", value, "propertyId");
      return (Criteria) this;
    }

    public Criteria andPropertyIdLessThanOrEqualTo(String value) {
      addCriterion("PROPERTY_ID <=", value, "propertyId");
      return (Criteria) this;
    }

    public Criteria andPropertyIdLike(String value) {
      addCriterion("PROPERTY_ID like", value, "propertyId");
      return (Criteria) this;
    }

    public Criteria andPropertyIdNotLike(String value) {
      addCriterion("PROPERTY_ID not like", value, "propertyId");
      return (Criteria) this;
    }

    public Criteria andPropertyIdIn(List<String> values) {
      addCriterion("PROPERTY_ID in", values, "propertyId");
      return (Criteria) this;
    }

    public Criteria andPropertyIdNotIn(List<String> values) {
      addCriterion("PROPERTY_ID not in", values, "propertyId");
      return (Criteria) this;
    }

    public Criteria andPropertyIdBetween(String value1, String value2) {
      addCriterion("PROPERTY_ID between", value1, value2, "propertyId");
      return (Criteria) this;
    }

    public Criteria andPropertyIdNotBetween(String value1, String value2) {
      addCriterion("PROPERTY_ID not between", value1, value2, "propertyId");
      return (Criteria) this;
    }

    public Criteria andEnumIdIsNull() {
      addCriterion("ENUM_ID is null");
      return (Criteria) this;
    }

    public Criteria andEnumIdIsNotNull() {
      addCriterion("ENUM_ID is not null");
      return (Criteria) this;
    }

    public Criteria andEnumIdEqualTo(String value) {
      addCriterion("ENUM_ID =", value, "enumId");
      return (Criteria) this;
    }

    public Criteria andEnumIdNotEqualTo(String value) {
      addCriterion("ENUM_ID <>", value, "enumId");
      return (Criteria) this;
    }

    public Criteria andEnumIdGreaterThan(String value) {
      addCriterion("ENUM_ID >", value, "enumId");
      return (Criteria) this;
    }

    public Criteria andEnumIdGreaterThanOrEqualTo(String value) {
      addCriterion("ENUM_ID >=", value, "enumId");
      return (Criteria) this;
    }

    public Criteria andEnumIdLessThan(String value) {
      addCriterion("ENUM_ID <", value, "enumId");
      return (Criteria) this;
    }

    public Criteria andEnumIdLessThanOrEqualTo(String value) {
      addCriterion("ENUM_ID <=", value, "enumId");
      return (Criteria) this;
    }

    public Criteria andEnumIdLike(String value) {
      addCriterion("ENUM_ID like", value, "enumId");
      return (Criteria) this;
    }

    public Criteria andEnumIdNotLike(String value) {
      addCriterion("ENUM_ID not like", value, "enumId");
      return (Criteria) this;
    }

    public Criteria andEnumIdIn(List<String> values) {
      addCriterion("ENUM_ID in", values, "enumId");
      return (Criteria) this;
    }

    public Criteria andEnumIdNotIn(List<String> values) {
      addCriterion("ENUM_ID not in", values, "enumId");
      return (Criteria) this;
    }

    public Criteria andEnumIdBetween(String value1, String value2) {
      addCriterion("ENUM_ID between", value1, value2, "enumId");
      return (Criteria) this;
    }

    public Criteria andEnumIdNotBetween(String value1, String value2) {
      addCriterion("ENUM_ID not between", value1, value2, "enumId");
      return (Criteria) this;
    }

    public Criteria andIdLikeInsensitive(String value) {
      addCriterion("upper(ID) like", value.toUpperCase(), "id");
      return (Criteria) this;
    }

    public Criteria andPropertyIdLikeInsensitive(String value) {
      addCriterion("upper(PROPERTY_ID) like", value.toUpperCase(), "propertyId");
      return (Criteria) this;
    }

    public Criteria andEnumIdLikeInsensitive(String value) {
      addCriterion("upper(ENUM_ID) like", value.toUpperCase(), "enumId");
      return (Criteria) this;
    }
  }

  /**
   * This class was generated by MyBatis Generator.
   * This class corresponds to the database table T_GM_PROPERTIES_MAPPING
   *
   * @mbggenerated do_not_delete_during_merge
   */
  public static class Criteria extends GeneratedCriteria {

    protected Criteria() {
      super();
    }
  }

  /**
   * This class was generated by MyBatis Generator.
   * This class corresponds to the database table T_GM_PROPERTIES_MAPPING
   *
   * @mbggenerated
   */
  public static class Criterion {
    private String condition;

    private Object value;

    private Object secondValue;

    private boolean noValue;

    private boolean singleValue;

    private boolean betweenValue;

    private boolean listValue;

    private String typeHandler;

    public String getCondition() {
      return condition;
    }

    public Object getValue() {
      return value;
    }

    public Object getSecondValue() {
      return secondValue;
    }

    public boolean isNoValue() {
      return noValue;
    }

    public boolean isSingleValue() {
      return singleValue;
    }

    public boolean isBetweenValue() {
      return betweenValue;
    }

    public boolean isListValue() {
      return listValue;
    }

    public String getTypeHandler() {
      return typeHandler;
    }

    protected Criterion(String condition) {
      super();
      this.condition = condition;
      this.typeHandler = null;
      this.noValue = true;
    }

    protected Criterion(String condition, Object value, String typeHandler) {
      super();
      this.condition = condition;
      this.value = value;
      this.typeHandler = typeHandler;
      if (value instanceof List<?>) {
        this.listValue = true;
      } else {
        this.singleValue = true;
      }
    }

    protected Criterion(String condition, Object value) {
      this(condition, value, null);
    }

    protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
      super();
      this.condition = condition;
      this.value = value;
      this.secondValue = secondValue;
      this.typeHandler = typeHandler;
      this.betweenValue = true;
    }

    protected Criterion(String condition, Object value, Object secondValue) {
      this(condition, value, secondValue, null);
    }
  }
}