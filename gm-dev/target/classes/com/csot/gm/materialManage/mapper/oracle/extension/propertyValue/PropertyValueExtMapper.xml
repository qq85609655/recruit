<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.csot.gm.materialManage.dao.extension.propertyValue.PropertyValueExtMapper">

  <resultMap id="BaseResultMap"
    type="com.csot.gm.materialManage.model.extension.propertyValue.PropertyValueExt">
    <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="PROPERTY_NAME" property="propertyName" jdbcType="VARCHAR" />
    <result column="PROPERTY_VALUE" property="propertyValue" jdbcType="VARCHAR" />
    <result column="PROPERTY_TYPE" property="propertyType" jdbcType="VARCHAR" />
    <result column="PART_NO_ID" property="partNoId" jdbcType="VARCHAR" />
    <result column="ENUM_VALUE_ID" property="enumValueId" jdbcType="VARCHAR" />
  </resultMap>

  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" suffix=")" prefixOverrides="and">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition}
                  #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition}
                  #{criterion.value} and
                  #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")"
                    separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>

  <select id="selectPropertyValueByPartNo" parameterType="map" resultMap="BaseResultMap">
    select gpv.id,
    gpv.property_name, gpv.property_value, gpv.property_type, gpv.part_no_id,
    gpv.enum_value_id
    from
    t_gm_property_value gpv where gpv.part_no_id = #{partNoId} and gpv.property_type = 'Y'
  </select>

  <select id="selectPropertyValueByPartNoId" parameterType="map" resultMap="BaseResultMap">
    select gpv.id,
    gpv.property_name, gpv.property_value, gpv.property_type, gpv.part_no_id,
    gpv.enum_value_id
    from
    t_gm_property_value gpv where gpv.part_no_id = #{partNoId}
  </select>

  <delete id="deleteByPartNoId" parameterType="java.lang.String">
    delete from
    T_GM_PROPERTY_VALUE where PART_NO_ID
    = #{partNoId,jdbcType=VARCHAR}
  </delete>

  <select id="selectPropertyValueByPartNoIdAndPropertyName" parameterType="map" resultMap="BaseResultMap">
    select gpv.id, gpv.property_name, gpv.property_value, gpv.property_type, gpv.part_no_id,
    gpv.enum_value_id
    from t_gm_property_value gpv where gpv.part_no_id = #{partNoId} and
    gpv.property_name =
    #{propertyName}
  </select>

  <select id="selectPropertyValueByLikePropertyValue" parameterType="map" resultMap="BaseResultMap">
    select
    gpv.id, gpv.property_name, gpv.property_value, gpv.property_type, gpv.part_no_id,
    gpv.enum_value_id
    from t_gm_property_value gpv where gpv.property_value like #{propertyValue}
  </select>

  <select id="selectPropertyValueByPropertyNameLikePropertyValue" parameterType="map"
    resultMap="BaseResultMap">
    select gpv.id, gpv.property_name, gpv.property_value,
    gpv.property_type,
    gpv.part_no_id, gpv.enum_value_id
    from t_gm_property_value gpv where gpv.property_name =
    #{propertyName} and gpv.property_value like
    #{propertyValue}
  </select>
  <select id="selectProValueByPropertyNameAndPropertyValue" parameterType="map" resultMap="BaseResultMap">
    select gpv.id, gpv.property_name, gpv.property_value,
    gpv.property_type,
    gpv.part_no_id,
    gpv.enum_value_id
    from t_gm_property_value gpv where gpv.property_name =
    #{propertyName} and
    gpv.property_value=
    #{propertyValue}
  </select>

  <select id="countByExample"
    parameterType="com.csot.gm.materialManage.model.extension.propertyValue.PropertyValueExtCriteria"
    resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from T_GM_PROPERTY_VALUE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <sql id="Oracle_Dialect_Pagination_Prefix">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <if test="page != null">
      select * from ( select row_.*, rownum rownum_ from (
    </if>
  </sql>
  <sql id="Oracle_Dialect_Pagination_Suffix">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <if test="page != null">
      <![CDATA[ ) row_ ) where rownum_ > #{page.begin} and rownum_ <= #{page.end} ]]>
    </if>
  </sql>
</mapper>