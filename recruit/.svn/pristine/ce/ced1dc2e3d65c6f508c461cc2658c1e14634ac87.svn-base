<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:context="http://www.springframework.org/schema/context" 
  xmlns:mvc="http://www.springframework.org/schema/mvc"
  xmlns:task="http://www.springframework.org/schema/task"
  xmlns:p="http://www.springframework.org/schema/p"
  xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.0.xsd
       http://www.springframework.org/schema/mvc
	   	 http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
       http://www.springframework.org/schema/task 
       http://www.springframework.org/schema/task/spring-task-4.0.xsd">
  
  <!-- 自动扫描base-package包下的所有controller类，使其认为spring mvc的控制器 -->
  <!-- 加载controller的时候,只加载controller不加载service,因为此时事务并未生效,若此时加载了service,那么事务无法对service进行拦截 -->
  <context:component-scan base-package="org.amberframework.*">
    <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
  </context:component-scan>
  <context:component-scan base-package="test.*" use-default-filters="false">
    <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
  </context:component-scan>
  <context:component-scan base-package="com.csot.recruit.controller" />
  
  <mvc:annotation-driven>
    <mvc:argument-resolvers>
      <bean class="org.amberframework.core.bind.method.CurrentUserMethodArgumentResolver" />
    </mvc:argument-resolvers>
  	<mvc:message-converters> 
		<bean class="org.springframework.http.converter.StringHttpMessageConverter">
		</bean>
		<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">  
          <property name="supportedMediaTypes">  
            <list>  
              <value>text/html; charset=UTF-8</value>  
              <value>application/json; charset=UTF-8</value>  
            </list>  
          </property>
        </bean>
  	</mvc:message-converters>
  </mvc:annotation-driven>
  <bean id="customObjectMapper" class="com.csot.recruit.common.system.CustomObjectMapper"></bean> 

  <!-- 配置文件上传bean -->
  <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"> 
    <!-- set the max upload size100MB --> 
    <property name="maxUploadSize"> 
      <value>209715200</value> 
    </property> 
    <property name="maxInMemorySize"> 
      <value>4096</value> 
    </property> 
    <property name="defaultEncoding" value="utf-8"></property> 
  </bean> 
  
  <!-- 配置读取properties资源文件类 -->
  <bean id="configBean" class="com.csot.recruit.common.util.ConstantsConfigurer">
		<property name="location" value="classpath:constant.properties" />
  </bean>
  
  <!-- 默认静态资源映射 -->
  <mvc:default-servlet-handler />

  <!-- 默认的视图解析器 -->
  <bean id="defaultViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver" p:order="3">
    <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
    <property name="contentType" value="text/html" />
    <property name="prefix" value="/webpage/" />
    <property name="suffix" value=".jsp" />
  </bean>

  <!-- SpringMVC拦截器   -->
  
  <bean id="sendMailUtil" class="com.csot.recruit.common.util.SendMailUtil">     
    <property name="freeMarker" ref="freemarkerConfig"></property>     
	</bean> 
	
  <!--视图解释器 -->  
  <bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">  
	  <property name="order" value="0" />
    <property name="suffix" value=".ftl" />
    <property name="contentType" value="text/html;charset=UTF-8" />
  </bean>
  
  <!-- elasticSearch配置 -->
  <bean id="elasticSearchConfig" class="com.csot.recruit.common.util.ElasticSearchConfig">
    <property name="clusterName" value="${elasticsearch.clusterName}"/>
    <property name="addresses" value="${elasticsearch.addresses}"/>
    <property name="type" value="${elasticsearch.type}"/>
  </bean>
  
  <task:scheduler id="scheduler" pool-size="10"/>
  <task:executor id="executor" keep-alive="3600" pool-size="100-200" queue-capacity="500" rejection-policy="CALLER_RUNS"/>
  
  <!--定时任务 -->
  <task:annotation-driven executor="executor" scheduler="scheduler"/>
  
  <import resource="springservlet-mvc-shiro.xml" />
  
</beans>