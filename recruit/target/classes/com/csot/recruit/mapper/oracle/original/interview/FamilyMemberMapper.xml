<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.csot.recruit.dao.original.interview.FamilyMemberMapper" >
  <resultMap id="BaseResultMap" type="com.csot.recruit.model.original.interview.FamilyMember" >
    <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="PERSON_CODE" property="personCode" jdbcType="VARCHAR" />
    <result column="MENBER_NAME" property="menberName" jdbcType="VARCHAR" />
    <result column="FAMILY_RELATION" property="familyRelation" jdbcType="VARCHAR" />
    <result column="MENBER_GENDER" property="menberGender" jdbcType="VARCHAR" />
    <result column="MENBER_BIRTHDAY" property="menberBirthday" jdbcType="VARCHAR" />
    <result column="MENBER_ADDRESS" property="menberAddress" jdbcType="VARCHAR" />
    <result column="EMERGENT_FLAG" property="emergentFlag" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, PERSON_CODE, MENBER_NAME, FAMILY_RELATION, MENBER_GENDER, MENBER_BIRTHDAY, MENBER_ADDRESS, 
    EMERGENT_FLAG
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.csot.recruit.model.original.interview.FamilyMemberCriteria" >
    <include refid="Oracle_Dialect_Pagination_Prefix" />
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from T_FAMILY_MEMBER
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="Oracle_Dialect_Pagination_Suffix" />
  </select>

  <select id="selectByPersonCode" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from T_FAMILY_MEMBER
    where PERSON_CODE = #{personCode,jdbcType=VARCHAR}
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from T_FAMILY_MEMBER
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from T_FAMILY_MEMBER
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.csot.recruit.model.original.interview.FamilyMemberCriteria" >
    delete from T_FAMILY_MEMBER
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.csot.recruit.model.original.interview.FamilyMember" >
    insert into T_FAMILY_MEMBER (ID, PERSON_CODE, MENBER_NAME, 
      FAMILY_RELATION, MENBER_GENDER, MENBER_BIRTHDAY, 
      MENBER_ADDRESS, EMERGENT_FLAG)
    values (#{id,jdbcType=VARCHAR}, #{personCode,jdbcType=VARCHAR}, #{menberName,jdbcType=VARCHAR}, 
      #{familyRelation,jdbcType=VARCHAR}, #{menberGender,jdbcType=VARCHAR}, #{menberBirthday,jdbcType=VARCHAR}, 
      #{menberAddress,jdbcType=VARCHAR}, #{emergentFlag,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.csot.recruit.model.original.interview.FamilyMember" >
    insert into T_FAMILY_MEMBER
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="personCode != null" >
        PERSON_CODE,
      </if>
      <if test="menberName != null" >
        MENBER_NAME,
      </if>
      <if test="familyRelation != null" >
        FAMILY_RELATION,
      </if>
      <if test="menberGender != null" >
        MENBER_GENDER,
      </if>
      <if test="menberBirthday != null" >
        MENBER_BIRTHDAY,
      </if>
      <if test="menberAddress != null" >
        MENBER_ADDRESS,
      </if>
      <if test="emergentFlag != null" >
        EMERGENT_FLAG,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="personCode != null" >
        #{personCode,jdbcType=VARCHAR},
      </if>
      <if test="menberName != null" >
        #{menberName,jdbcType=VARCHAR},
      </if>
      <if test="familyRelation != null" >
        #{familyRelation,jdbcType=VARCHAR},
      </if>
      <if test="menberGender != null" >
        #{menberGender,jdbcType=VARCHAR},
      </if>
      <if test="menberBirthday != null" >
        #{menberBirthday,jdbcType=VARCHAR},
      </if>
      <if test="menberAddress != null" >
        #{menberAddress,jdbcType=VARCHAR},
      </if>
      <if test="emergentFlag != null" >
        #{emergentFlag,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.csot.recruit.model.original.interview.FamilyMemberCriteria" resultType="java.lang.Integer" >
    select count(*) from T_FAMILY_MEMBER
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update T_FAMILY_MEMBER
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.personCode != null" >
        PERSON_CODE = #{record.personCode,jdbcType=VARCHAR},
      </if>
      <if test="record.menberName != null" >
        MENBER_NAME = #{record.menberName,jdbcType=VARCHAR},
      </if>
      <if test="record.familyRelation != null" >
        FAMILY_RELATION = #{record.familyRelation,jdbcType=VARCHAR},
      </if>
      <if test="record.menberGender != null" >
        MENBER_GENDER = #{record.menberGender,jdbcType=VARCHAR},
      </if>
      <if test="record.menberBirthday != null" >
        MENBER_BIRTHDAY = #{record.menberBirthday,jdbcType=VARCHAR},
      </if>
      <if test="record.menberAddress != null" >
        MENBER_ADDRESS = #{record.menberAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.emergentFlag != null" >
        EMERGENT_FLAG = #{record.emergentFlag,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update T_FAMILY_MEMBER
    set ID = #{record.id,jdbcType=VARCHAR},
      PERSON_CODE = #{record.personCode,jdbcType=VARCHAR},
      MENBER_NAME = #{record.menberName,jdbcType=VARCHAR},
      FAMILY_RELATION = #{record.familyRelation,jdbcType=VARCHAR},
      MENBER_GENDER = #{record.menberGender,jdbcType=VARCHAR},
      MENBER_BIRTHDAY = #{record.menberBirthday,jdbcType=VARCHAR},
      MENBER_ADDRESS = #{record.menberAddress,jdbcType=VARCHAR},
      EMERGENT_FLAG = #{record.emergentFlag,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.csot.recruit.model.original.interview.FamilyMember" >
    update T_FAMILY_MEMBER
    <set >
      <if test="personCode != null" >
        PERSON_CODE = #{personCode,jdbcType=VARCHAR},
      </if>
      <if test="menberName != null" >
        MENBER_NAME = #{menberName,jdbcType=VARCHAR},
      </if>
      <if test="familyRelation != null" >
        FAMILY_RELATION = #{familyRelation,jdbcType=VARCHAR},
      </if>
      <if test="menberGender != null" >
        MENBER_GENDER = #{menberGender,jdbcType=VARCHAR},
      </if>
      <if test="menberBirthday != null" >
        MENBER_BIRTHDAY = #{menberBirthday,jdbcType=VARCHAR},
      </if>
      <if test="menberAddress != null" >
        MENBER_ADDRESS = #{menberAddress,jdbcType=VARCHAR},
      </if>
      <if test="emergentFlag != null" >
        EMERGENT_FLAG = #{emergentFlag,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.csot.recruit.model.original.interview.FamilyMember" >
    update T_FAMILY_MEMBER
    set PERSON_CODE = #{personCode,jdbcType=VARCHAR},
      MENBER_NAME = #{menberName,jdbcType=VARCHAR},
      FAMILY_RELATION = #{familyRelation,jdbcType=VARCHAR},
      MENBER_GENDER = #{menberGender,jdbcType=VARCHAR},
      MENBER_BIRTHDAY = #{menberBirthday,jdbcType=VARCHAR},
      MENBER_ADDRESS = #{menberAddress,jdbcType=VARCHAR},
      EMERGENT_FLAG = #{emergentFlag,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <sql id="Oracle_Dialect_Pagination_Prefix" >
    <if test="page != null" >
      select * from ( select row_.*, rownum rownum_ from ( 
    </if>
  </sql>
  <sql id="Oracle_Dialect_Pagination_Suffix" >
    <if test="page != null" >
      <![CDATA[ ) row_ ) where rownum_ > #{page.begin} and rownum_ <= #{page.end} ]]>
    </if>
  </sql>
</mapper>