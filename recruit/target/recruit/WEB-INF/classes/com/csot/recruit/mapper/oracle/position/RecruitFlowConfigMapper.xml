<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.csot.recruit.dao.position.RecruitFlowConfigMapper" >
  <resultMap id="BaseResultMap" type="com.csot.recruit.model.position.RecruitFlowConfig" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="RECRUIT_PERSON" property="recruitPerson" jdbcType="CHAR" />
    <result column="RECRUIT_PERSON_OTHER" property="recruitPersonOther" jdbcType="VARCHAR" />
    <result column="DEMAND_DEP_OWNER" property="demandDepOwner" jdbcType="CHAR" />
    <result column="RECEIVE_EMAIL" property="receiveEmail" jdbcType="VARCHAR" />
    <result column="INTERVIEW_TEMPLATE" property="interviewTemplate" jdbcType="CHAR" />
    <result column="CREATE_DATE" property="createDate" jdbcType="TIMESTAMP" />
    <result column="RECRUIT_POSITION_ID" property="recruitPositionId" jdbcType="CHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, RECRUIT_PERSON, RECRUIT_PERSON_OTHER, DEMAND_DEP_OWNER, RECEIVE_EMAIL, INTERVIEW_TEMPLATE, 
    CREATE_DATE, RECRUIT_POSITION_ID
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.csot.recruit.model.position.RecruitFlowConfigCriteria" >
    <include refid="Oracle_Dialect_Pagination_Prefix" />
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from T_RECRUIT_FLOW_CONFIG
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="Oracle_Dialect_Pagination_Suffix" />
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from T_RECRUIT_FLOW_CONFIG
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from T_RECRUIT_FLOW_CONFIG
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.csot.recruit.model.position.RecruitFlowConfigCriteria" >
    delete from T_RECRUIT_FLOW_CONFIG
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.csot.recruit.model.position.RecruitFlowConfig" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="BEFORE" >
      select SQ_PO_REFLOWCON_IN_ID.NEXTVAL from dual
    </selectKey>
    insert into T_RECRUIT_FLOW_CONFIG (ID, RECRUIT_PERSON, RECRUIT_PERSON_OTHER, 
      DEMAND_DEP_OWNER, RECEIVE_EMAIL, INTERVIEW_TEMPLATE, 
      CREATE_DATE, RECRUIT_POSITION_ID)
    values (#{id,jdbcType=INTEGER}, #{recruitPerson,jdbcType=CHAR}, #{recruitPersonOther,jdbcType=VARCHAR}, 
      #{demandDepOwner,jdbcType=CHAR}, #{receiveEmail,jdbcType=VARCHAR}, #{interviewTemplate,jdbcType=CHAR}, 
      #{createDate,jdbcType=TIMESTAMP}, #{recruitPositionId,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.csot.recruit.model.position.RecruitFlowConfig" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="BEFORE" >
      select SQ_PO_REFLOWCON_IN_ID.NEXTVAL from dual
    </selectKey>
    insert into T_RECRUIT_FLOW_CONFIG
    <trim prefix="(" suffix=")" suffixOverrides="," >
      ID,
      <if test="recruitPerson != null" >
        RECRUIT_PERSON,
      </if>
      <if test="recruitPersonOther != null" >
        RECRUIT_PERSON_OTHER,
      </if>
      <if test="demandDepOwner != null" >
        DEMAND_DEP_OWNER,
      </if>
      <if test="receiveEmail != null" >
        RECEIVE_EMAIL,
      </if>
      <if test="interviewTemplate != null" >
        INTERVIEW_TEMPLATE,
      </if>
      <if test="createDate != null" >
        CREATE_DATE,
      </if>
      <if test="recruitPositionId != null" >
        RECRUIT_POSITION_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{id,jdbcType=INTEGER},
      <if test="recruitPerson != null" >
        #{recruitPerson,jdbcType=CHAR},
      </if>
      <if test="recruitPersonOther != null" >
        #{recruitPersonOther,jdbcType=VARCHAR},
      </if>
      <if test="demandDepOwner != null" >
        #{demandDepOwner,jdbcType=CHAR},
      </if>
      <if test="receiveEmail != null" >
        #{receiveEmail,jdbcType=VARCHAR},
      </if>
      <if test="interviewTemplate != null" >
        #{interviewTemplate,jdbcType=CHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="recruitPositionId != null" >
        #{recruitPositionId,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.csot.recruit.model.position.RecruitFlowConfigCriteria" resultType="java.lang.Integer" >
    select count(*) from T_RECRUIT_FLOW_CONFIG
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update T_RECRUIT_FLOW_CONFIG
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.recruitPerson != null" >
        RECRUIT_PERSON = #{record.recruitPerson,jdbcType=CHAR},
      </if>
      <if test="record.recruitPersonOther != null" >
        RECRUIT_PERSON_OTHER = #{record.recruitPersonOther,jdbcType=VARCHAR},
      </if>
      <if test="record.demandDepOwner != null" >
        DEMAND_DEP_OWNER = #{record.demandDepOwner,jdbcType=CHAR},
      </if>
      <if test="record.receiveEmail != null" >
        RECEIVE_EMAIL = #{record.receiveEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.interviewTemplate != null" >
        INTERVIEW_TEMPLATE = #{record.interviewTemplate,jdbcType=CHAR},
      </if>
      <if test="record.createDate != null" >
        CREATE_DATE = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.recruitPositionId != null" >
        RECRUIT_POSITION_ID = #{record.recruitPositionId,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update T_RECRUIT_FLOW_CONFIG
    set ID = #{record.id,jdbcType=INTEGER},
      RECRUIT_PERSON = #{record.recruitPerson,jdbcType=CHAR},
      RECRUIT_PERSON_OTHER = #{record.recruitPersonOther,jdbcType=VARCHAR},
      DEMAND_DEP_OWNER = #{record.demandDepOwner,jdbcType=CHAR},
      RECEIVE_EMAIL = #{record.receiveEmail,jdbcType=VARCHAR},
      INTERVIEW_TEMPLATE = #{record.interviewTemplate,jdbcType=CHAR},
      CREATE_DATE = #{record.createDate,jdbcType=TIMESTAMP},
      RECRUIT_POSITION_ID = #{record.recruitPositionId,jdbcType=CHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.csot.recruit.model.position.RecruitFlowConfig" >
    update T_RECRUIT_FLOW_CONFIG
    <set >
      <if test="recruitPerson != null" >
        RECRUIT_PERSON = #{recruitPerson,jdbcType=CHAR},
      </if>
      <if test="recruitPersonOther != null" >
        RECRUIT_PERSON_OTHER = #{recruitPersonOther,jdbcType=VARCHAR},
      </if>
      <if test="demandDepOwner != null" >
        DEMAND_DEP_OWNER = #{demandDepOwner,jdbcType=CHAR},
      </if>
      <if test="receiveEmail != null" >
        RECEIVE_EMAIL = #{receiveEmail,jdbcType=VARCHAR},
      </if>
      <if test="interviewTemplate != null" >
        INTERVIEW_TEMPLATE = #{interviewTemplate,jdbcType=CHAR},
      </if>
      <if test="createDate != null" >
        CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="recruitPositionId != null" >
        RECRUIT_POSITION_ID = #{recruitPositionId,jdbcType=CHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.csot.recruit.model.position.RecruitFlowConfig" >
    update T_RECRUIT_FLOW_CONFIG
    set RECRUIT_PERSON = #{recruitPerson,jdbcType=CHAR},
      RECRUIT_PERSON_OTHER = #{recruitPersonOther,jdbcType=VARCHAR},
      DEMAND_DEP_OWNER = #{demandDepOwner,jdbcType=CHAR},
      RECEIVE_EMAIL = #{receiveEmail,jdbcType=VARCHAR},
      INTERVIEW_TEMPLATE = #{interviewTemplate,jdbcType=CHAR},
      CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      RECRUIT_POSITION_ID = #{recruitPositionId,jdbcType=CHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <sql id="Oracle_Dialect_Pagination_Prefix" >
    <if test="page != null" >
      select * from ( select row_.*, rownum rownum_ from ( 
    </if>
  </sql>
  <sql id="Oracle_Dialect_Pagination_Suffix" >
    <if test="page != null" >
      <![CDATA[ ) row_ ) where rownum_ > #{page.begin} and rownum_ <= #{page.end} ]]>
    </if>
  </sql>
</mapper>