<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.csot.recruit.dao.original.flow.employ.EmployWorkMapper" >
  <resultMap id="BaseResultMap" type="com.csot.recruit.model.original.flow.employ.EmployWork" >
    <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="START_DATE" property="startDate" jdbcType="VARCHAR" />
    <result column="END_DATE" property="endDate" jdbcType="VARCHAR" />
    <result column="COMPANY" property="company" jdbcType="VARCHAR" />
    <result column="POST" property="post" jdbcType="VARCHAR" />
    <result column="CREATOR_ID" property="creatorId" jdbcType="VARCHAR" />
    <result column="CREATE_DATE" property="createDate" jdbcType="TIMESTAMP" />
    <result column="MODIFIED_ID" property="modifiedId" jdbcType="VARCHAR" />
    <result column="UPDATE_DATE" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="EMPLOY_ID" property="employId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, START_DATE, END_DATE, COMPANY, POST, CREATOR_ID, CREATE_DATE, MODIFIED_ID, UPDATE_DATE, 
    EMPLOY_ID
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.csot.recruit.model.original.flow.employ.EmployWorkCriteria" >
    <include refid="Oracle_Dialect_Pagination_Prefix" />
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from T_EMPLOY_WORK
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="Oracle_Dialect_Pagination_Suffix" />
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from T_EMPLOY_WORK
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from T_EMPLOY_WORK
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.csot.recruit.model.original.flow.employ.EmployWorkCriteria" >
    delete from T_EMPLOY_WORK
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.csot.recruit.model.original.flow.employ.EmployWork" >
    insert into T_EMPLOY_WORK (ID, START_DATE, END_DATE, 
      COMPANY, POST, CREATOR_ID, 
      CREATE_DATE, MODIFIED_ID, UPDATE_DATE, 
      EMPLOY_ID)
    values (#{id,jdbcType=VARCHAR}, #{startDate,jdbcType=VARCHAR}, #{endDate,jdbcType=VARCHAR}, 
      #{company,jdbcType=VARCHAR}, #{post,jdbcType=VARCHAR}, #{creatorId,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=TIMESTAMP}, #{modifiedId,jdbcType=VARCHAR}, #{updateDate,jdbcType=TIMESTAMP}, 
      #{employId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.csot.recruit.model.original.flow.employ.EmployWork" >
    insert into T_EMPLOY_WORK
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="startDate != null" >
        START_DATE,
      </if>
      <if test="endDate != null" >
        END_DATE,
      </if>
      <if test="company != null" >
        COMPANY,
      </if>
      <if test="post != null" >
        POST,
      </if>
      <if test="creatorId != null" >
        CREATOR_ID,
      </if>
      <if test="createDate != null" >
        CREATE_DATE,
      </if>
      <if test="modifiedId != null" >
        MODIFIED_ID,
      </if>
      <if test="updateDate != null" >
        UPDATE_DATE,
      </if>
      <if test="employId != null" >
        EMPLOY_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null" >
        #{startDate,jdbcType=VARCHAR},
      </if>
      <if test="endDate != null" >
        #{endDate,jdbcType=VARCHAR},
      </if>
      <if test="company != null" >
        #{company,jdbcType=VARCHAR},
      </if>
      <if test="post != null" >
        #{post,jdbcType=VARCHAR},
      </if>
      <if test="creatorId != null" >
        #{creatorId,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedId != null" >
        #{modifiedId,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="employId != null" >
        #{employId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.csot.recruit.model.original.flow.employ.EmployWorkCriteria" resultType="java.lang.Integer" >
    select count(*) from T_EMPLOY_WORK
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update T_EMPLOY_WORK
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.startDate != null" >
        START_DATE = #{record.startDate,jdbcType=VARCHAR},
      </if>
      <if test="record.endDate != null" >
        END_DATE = #{record.endDate,jdbcType=VARCHAR},
      </if>
      <if test="record.company != null" >
        COMPANY = #{record.company,jdbcType=VARCHAR},
      </if>
      <if test="record.post != null" >
        POST = #{record.post,jdbcType=VARCHAR},
      </if>
      <if test="record.creatorId != null" >
        CREATOR_ID = #{record.creatorId,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null" >
        CREATE_DATE = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifiedId != null" >
        MODIFIED_ID = #{record.modifiedId,jdbcType=VARCHAR},
      </if>
      <if test="record.updateDate != null" >
        UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.employId != null" >
        EMPLOY_ID = #{record.employId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update T_EMPLOY_WORK
    set ID = #{record.id,jdbcType=VARCHAR},
      START_DATE = #{record.startDate,jdbcType=VARCHAR},
      END_DATE = #{record.endDate,jdbcType=VARCHAR},
      COMPANY = #{record.company,jdbcType=VARCHAR},
      POST = #{record.post,jdbcType=VARCHAR},
      CREATOR_ID = #{record.creatorId,jdbcType=VARCHAR},
      CREATE_DATE = #{record.createDate,jdbcType=TIMESTAMP},
      MODIFIED_ID = #{record.modifiedId,jdbcType=VARCHAR},
      UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP},
      EMPLOY_ID = #{record.employId,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.csot.recruit.model.original.flow.employ.EmployWork" >
    update T_EMPLOY_WORK
    <set >
      <if test="startDate != null" >
        START_DATE = #{startDate,jdbcType=VARCHAR},
      </if>
      <if test="endDate != null" >
        END_DATE = #{endDate,jdbcType=VARCHAR},
      </if>
      <if test="company != null" >
        COMPANY = #{company,jdbcType=VARCHAR},
      </if>
      <if test="post != null" >
        POST = #{post,jdbcType=VARCHAR},
      </if>
      <if test="creatorId != null" >
        CREATOR_ID = #{creatorId,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedId != null" >
        MODIFIED_ID = #{modifiedId,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="employId != null" >
        EMPLOY_ID = #{employId,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.csot.recruit.model.original.flow.employ.EmployWork" >
    update T_EMPLOY_WORK
    set START_DATE = #{startDate,jdbcType=VARCHAR},
      END_DATE = #{endDate,jdbcType=VARCHAR},
      COMPANY = #{company,jdbcType=VARCHAR},
      POST = #{post,jdbcType=VARCHAR},
      CREATOR_ID = #{creatorId,jdbcType=VARCHAR},
      CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      MODIFIED_ID = #{modifiedId,jdbcType=VARCHAR},
      UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
      EMPLOY_ID = #{employId,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <sql id="Oracle_Dialect_Pagination_Prefix" >
    <if test="page != null" >
      select * from ( select row_.*, rownum rownum_ from ( 
    </if>
  </sql>
  <sql id="Oracle_Dialect_Pagination_Suffix" >
    <if test="page != null" >
      <![CDATA[ ) row_ ) where rownum_ > #{page.begin} and rownum_ <= #{page.end} ]]>
    </if>
  </sql>
</mapper>