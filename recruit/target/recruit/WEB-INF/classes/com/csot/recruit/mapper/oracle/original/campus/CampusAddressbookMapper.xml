<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.csot.recruit.dao.original.campus.CampusAddressbookMapper" >
  <resultMap id="BaseResultMap" type="com.csot.recruit.model.original.campus.CampusAddressbook" >
    <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="WORK_NO" property="workNo" jdbcType="VARCHAR" />
    <result column="REALNAME" property="realname" jdbcType="VARCHAR" />
    <result column="SITE_NAME" property="siteName" jdbcType="VARCHAR" />
    <result column="SITE_ID" property="siteId" jdbcType="VARCHAR" />
    <result column="CAMPUS_ROLE" property="campusRole" jdbcType="VARCHAR" />
    <result column="PHONENO" property="phoneno" jdbcType="VARCHAR" />
    <result column="EMAIL" property="email" jdbcType="VARCHAR" />
    <result column="RESERVED_1" property="reserved1" jdbcType="VARCHAR" />
    <result column="RESERVED_2" property="reserved2" jdbcType="VARCHAR" />
    <result column="RESERVED_3" property="reserved3" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, WORK_NO, REALNAME, SITE_NAME, SITE_ID, CAMPUS_ROLE, PHONENO, EMAIL, RESERVED_1, 
    RESERVED_2, RESERVED_3
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.csot.recruit.model.original.campus.CampusAddressbookCriteria" >
    <include refid="Oracle_Dialect_Pagination_Prefix" />
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from T_CAMPUS_ADDRESSBOOK
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="Oracle_Dialect_Pagination_Suffix" />
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from T_CAMPUS_ADDRESSBOOK
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from T_CAMPUS_ADDRESSBOOK
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.csot.recruit.model.original.campus.CampusAddressbookCriteria" >
    delete from T_CAMPUS_ADDRESSBOOK
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.csot.recruit.model.original.campus.CampusAddressbook" >
    insert into T_CAMPUS_ADDRESSBOOK (ID, WORK_NO, REALNAME, 
      SITE_NAME, SITE_ID, CAMPUS_ROLE, 
      PHONENO, EMAIL, RESERVED_1, 
      RESERVED_2, RESERVED_3)
    values (#{id,jdbcType=VARCHAR}, #{workNo,jdbcType=VARCHAR}, #{realname,jdbcType=VARCHAR}, 
      #{siteName,jdbcType=VARCHAR}, #{siteId,jdbcType=VARCHAR}, #{campusRole,jdbcType=VARCHAR}, 
      #{phoneno,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{reserved1,jdbcType=VARCHAR}, 
      #{reserved2,jdbcType=VARCHAR}, #{reserved3,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.csot.recruit.model.original.campus.CampusAddressbook" >
    insert into T_CAMPUS_ADDRESSBOOK
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="workNo != null" >
        WORK_NO,
      </if>
      <if test="realname != null" >
        REALNAME,
      </if>
      <if test="siteName != null" >
        SITE_NAME,
      </if>
      <if test="siteId != null" >
        SITE_ID,
      </if>
      <if test="campusRole != null" >
        CAMPUS_ROLE,
      </if>
      <if test="phoneno != null" >
        PHONENO,
      </if>
      <if test="email != null" >
        EMAIL,
      </if>
      <if test="reserved1 != null" >
        RESERVED_1,
      </if>
      <if test="reserved2 != null" >
        RESERVED_2,
      </if>
      <if test="reserved3 != null" >
        RESERVED_3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="workNo != null" >
        #{workNo,jdbcType=VARCHAR},
      </if>
      <if test="realname != null" >
        #{realname,jdbcType=VARCHAR},
      </if>
      <if test="siteName != null" >
        #{siteName,jdbcType=VARCHAR},
      </if>
      <if test="siteId != null" >
        #{siteId,jdbcType=VARCHAR},
      </if>
      <if test="campusRole != null" >
        #{campusRole,jdbcType=VARCHAR},
      </if>
      <if test="phoneno != null" >
        #{phoneno,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="reserved1 != null" >
        #{reserved1,jdbcType=VARCHAR},
      </if>
      <if test="reserved2 != null" >
        #{reserved2,jdbcType=VARCHAR},
      </if>
      <if test="reserved3 != null" >
        #{reserved3,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.csot.recruit.model.original.campus.CampusAddressbookCriteria" resultType="java.lang.Integer" >
    select count(*) from T_CAMPUS_ADDRESSBOOK
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update T_CAMPUS_ADDRESSBOOK
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.workNo != null" >
        WORK_NO = #{record.workNo,jdbcType=VARCHAR},
      </if>
      <if test="record.realname != null" >
        REALNAME = #{record.realname,jdbcType=VARCHAR},
      </if>
      <if test="record.siteName != null" >
        SITE_NAME = #{record.siteName,jdbcType=VARCHAR},
      </if>
      <if test="record.siteId != null" >
        SITE_ID = #{record.siteId,jdbcType=VARCHAR},
      </if>
      <if test="record.campusRole != null" >
        CAMPUS_ROLE = #{record.campusRole,jdbcType=VARCHAR},
      </if>
      <if test="record.phoneno != null" >
        PHONENO = #{record.phoneno,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        EMAIL = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.reserved1 != null" >
        RESERVED_1 = #{record.reserved1,jdbcType=VARCHAR},
      </if>
      <if test="record.reserved2 != null" >
        RESERVED_2 = #{record.reserved2,jdbcType=VARCHAR},
      </if>
      <if test="record.reserved3 != null" >
        RESERVED_3 = #{record.reserved3,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update T_CAMPUS_ADDRESSBOOK
    set ID = #{record.id,jdbcType=VARCHAR},
      WORK_NO = #{record.workNo,jdbcType=VARCHAR},
      REALNAME = #{record.realname,jdbcType=VARCHAR},
      SITE_NAME = #{record.siteName,jdbcType=VARCHAR},
      SITE_ID = #{record.siteId,jdbcType=VARCHAR},
      CAMPUS_ROLE = #{record.campusRole,jdbcType=VARCHAR},
      PHONENO = #{record.phoneno,jdbcType=VARCHAR},
      EMAIL = #{record.email,jdbcType=VARCHAR},
      RESERVED_1 = #{record.reserved1,jdbcType=VARCHAR},
      RESERVED_2 = #{record.reserved2,jdbcType=VARCHAR},
      RESERVED_3 = #{record.reserved3,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.csot.recruit.model.original.campus.CampusAddressbook" >
    update T_CAMPUS_ADDRESSBOOK
    <set >
      <if test="workNo != null" >
        WORK_NO = #{workNo,jdbcType=VARCHAR},
      </if>
      <if test="realname != null" >
        REALNAME = #{realname,jdbcType=VARCHAR},
      </if>
      <if test="siteName != null" >
        SITE_NAME = #{siteName,jdbcType=VARCHAR},
      </if>
      <if test="siteId != null" >
        SITE_ID = #{siteId,jdbcType=VARCHAR},
      </if>
      <if test="campusRole != null" >
        CAMPUS_ROLE = #{campusRole,jdbcType=VARCHAR},
      </if>
      <if test="phoneno != null" >
        PHONENO = #{phoneno,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        EMAIL = #{email,jdbcType=VARCHAR},
      </if>
      <if test="reserved1 != null" >
        RESERVED_1 = #{reserved1,jdbcType=VARCHAR},
      </if>
      <if test="reserved2 != null" >
        RESERVED_2 = #{reserved2,jdbcType=VARCHAR},
      </if>
      <if test="reserved3 != null" >
        RESERVED_3 = #{reserved3,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.csot.recruit.model.original.campus.CampusAddressbook" >
    update T_CAMPUS_ADDRESSBOOK
    set WORK_NO = #{workNo,jdbcType=VARCHAR},
      REALNAME = #{realname,jdbcType=VARCHAR},
      SITE_NAME = #{siteName,jdbcType=VARCHAR},
      SITE_ID = #{siteId,jdbcType=VARCHAR},
      CAMPUS_ROLE = #{campusRole,jdbcType=VARCHAR},
      PHONENO = #{phoneno,jdbcType=VARCHAR},
      EMAIL = #{email,jdbcType=VARCHAR},
      RESERVED_1 = #{reserved1,jdbcType=VARCHAR},
      RESERVED_2 = #{reserved2,jdbcType=VARCHAR},
      RESERVED_3 = #{reserved3,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <sql id="Oracle_Dialect_Pagination_Prefix" >
    <if test="page != null" >
      select * from ( select row_.*, rownum rownum_ from ( 
    </if>
  </sql>
  <sql id="Oracle_Dialect_Pagination_Suffix" >
    <if test="page != null" >
      <![CDATA[ ) row_ ) where rownum_ > #{page.begin} and rownum_ <= #{page.end} ]]>
    </if>
  </sql>
</mapper>